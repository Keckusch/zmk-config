/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "keys_de.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    macros {
        switch: switch {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "SWITCH";
        };

        sleep_win: sleep_win {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_WIN>,
                <&macro_tap>,
                <&kp DE_X>,
                <&macro_release>,
                <&kp LEFT_WIN>,
                <&macro_wait_time 200>,
                <&macro_tap>,
                <&kp DE_R>,
                <&macro_wait_time 200>,
                <&kp DE_E>;

            label = "SLEEP_WIN";
        };

        shut_down: shut_down {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_WIN>,
                <&macro_tap>,
                <&kp DE_X>,
                <&macro_release>,
                <&kp LEFT_WIN>,
                <&macro_wait_time 200>,
                <&macro_tap>,
                <&kp DE_R>,
                <&macro_wait_time 200>,
                <&kp DE_R>;

            label = "SHUT_DOWN";
        };

        sleep_mac: sleep_mac {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_WIN &kp LEFT_ALT>,
                <&macro_tap>,
                <&kp C_EJECT>,
                <&macro_release>,
                <&kp LEFT_ALT &kp LEFT_WIN>;

            label = "SLEEP_MAC";
        };

        shut_down_mac: shut_down_mac {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_WIN &kp LEFT_CONTROL &kp LEFT_ALT>,
                <&macro_tap>,
                <&kp C_EJECT>,
                <&macro_release>,
                <&kp LEFT_ALT &kp LEFT_CONTROL &kp LEFT_WIN>;

            label = "SHUT_DOWN_MAC";
        };

        Tilde_mac: Tilde_mac {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp DE_N>,
                <&macro_release>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp DE_SPACE>;

            label = "TILDE_MAC";
        };

        ipad: ipad {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 0 &to 6>;
            label = "IPAD";
        };

        win_privat: win_privat {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 1 &to 0>;
            label = "WIN_PRIVAT";
        };

        win_work: win_work {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 3 &to 0>;
            label = "WIN_WORK";
        };
    };

    behaviors {
        hr_l_ctrl: hr_l_ctrl {
            compatible = "zmk,behavior-hold-tap";
            label = "HR_L_CTRL";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <400>;
            flavor = "balanced";
            hold-trigger-key-positions = <6 7 8 9 10 11 23 35 34 22 33 21 32 20 31 19 18 30 28 27 26 16 13 39 38>;
        };

        hr_l_win_alt_shift: hr_l_win_alt_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "HR_L_WIN_ALT_SHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <400>;
            flavor = "balanced";
            hold-trigger-key-positions = <6 7 8 9 10 11 23 35 34 22 33 21 32 20 31 19 18 30 39 38>;
        };

        hr_r_crtl: hr_r_crtl {
            compatible = "zmk,behavior-hold-tap";
            label = "HR_R_CRTL";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <400>;
            flavor = "balanced";
            hold-trigger-key-positions = <6 28 27 26 16 13 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 39 38>;
        };

        hr_r_win_alt_shift: hr_r_win_alt_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "HR_R_WIN_ALT_SHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <400>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29>;
        };

        neo_level_l: neo_level_l {
            compatible = "zmk,behavior-hold-tap";
            label = "NEO_LEVEL_L";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <400>;
            flavor = "balanced";
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35>;
        };

        neo_level_r: neo_level_r {
            compatible = "zmk,behavior-hold-tap";
            label = "NEO_LEVEL_R";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <400>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29>;
        };

        level_switch: level_switch {
            compatible = "zmk,behavior-hold-tap";
            label = "LEVEL_SWITCH";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <400>;
            flavor = "balanced";
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 41 40>;
        };
    };

    combos {
        compatible = "zmk,combos";

        prefs_l {
            bindings = <&mo 4>;
            key-positions = <37 36>;
            layers = <0>;
        };

        del_word {
            bindings = <&kp LC(BACKSPACE)>;
            key-positions = <39 38>;
            timeout-ms = <100>;
            layers = <0>;
        };

        prefs_r {
            bindings = <&mo 4>;
            key-positions = <40 41>;
            layers = <0>;
        };

        r_t {
            bindings = <&kp DE_R>;
            key-positions = <4 5>;
            layers = <0>;
        };

        c_v {
            bindings = <&kp DE_C>;
            key-positions = <27 28>;
            layers = <0>;
        };

        p_u {
            bindings = <&kp DE_U_UMLAUT>;
            key-positions = <11 10>;
            layers = <0>;
        };

        prefs_l_mac {
            bindings = <&mo 9>;
            key-positions = <37 36>;
            layers = <6>;
        };

        prefs_r_mac {
            bindings = <&mo 9>;
            key-positions = <40 41>;
            layers = <6>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer_win {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB               &kp DE_Q                           &kp DE_W                           &kp DE_E                      &kp DE_R                             &kp DE_T     &kp DE_Z   &kp DE_U                              &kp DE_I                       &kp DE_O                            &kp DE_P                                   &kp DE_U_UMLAUT
&neo_level_l 1 DE_SZ  &hr_l_win_alt_shift LEFT_WIN DE_A  &hr_l_win_alt_shift LEFT_ALT DE_S  &hr_l_ctrl LEFT_CONTROL DE_D  &hr_l_win_alt_shift LEFT_SHIFT DE_F  &kp DE_G     &kp DE_H   &hr_r_win_alt_shift RIGHT_SHIFT DE_J  &hr_r_crtl RIGHT_CONTROL DE_K  &hr_r_win_alt_shift RIGHT_ALT DE_L  &hr_r_win_alt_shift RIGHT_WIN DE_O_UMLAUT  &neo_level_r 1 DE_A_UMLAUT
&kp LSHFT             &kp DE_Y                           &kp DE_X                           &kp DE_C                      &kp DE_V                             &kp DE_B     &kp DE_N   &kp DE_M                              &kp DE_COMMA                   &kp DE_DOT                          &kp DE_MINUS                               &kp RIGHT_SHIFT
                                                                                            &level_switch 5 LA(TAB)       &level_switch 3 DELETE               &kp ENTER    &kp SPACE  &level_switch 2 BACKSPACE             &level_switch 5 RIGHT_SHIFT
            >;
        };

        neo_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESC         &kp DE_DEGREE     &kp DE_UNDERSCORE  &kp DE_LEFT_BRACKET  &kp DE_RIGHT_BRACKET  &kp DE_CARET         &kp DE_EXCLAMATION   &kp DE_LESS_THAN         &kp DE_GREATER_THAN       &kp DE_EQUAL         &kp DE_AMPERSAND  &kp DE_SZ
&kp DE_SECTION  &kp DE_BACKSLASH  &kp DE_SLASH       &kp DE_LEFT_BRACE    &kp DE_RIGHT_BRACE    &kp DE_ASTERISK      &kp DE_QUESTION      &kp DE_LEFT_PARENTHESIS  &kp DE_RIGHT_PARENTHESIS  &kp DE_MINUS         &kp DE_COLON      &kp DE_AT
&kp DE_EURO     &kp DE_HASH       &kp DE_DOLLAR      &kp DE_PIPE          &kp DE_TILDE          &kp DE_APOSTROPHE    &kp DE_PLUS          &kp DE_PERCENT           &kp DE_DOUBLE_QUOTES      &kp DE_SINGLE_QUOTE  &kp DE_SEMICOLON  &none
                                                     &none                &none                 &kp LC(DE_PLUS)      &kp LC(LS(DE_PLUS))  &none                    &none
            >;
        };

        navigate {
            bindings = <
&kp ESC  &none     &kp PG_DN  &kp UP     &kp PG_UP  &none      &kp RC(DE_Z)  &kp RC(RS(DE_Z))  &none              &none          &none          &none
&none    &kp HOME  &kp LEFT   &kp DOWN   &kp RIGHT  &kp END    &none         &kp RIGHT_SHIFT   &kp RIGHT_CONTROL  &kp RIGHT_ALT  &kp RIGHT_WIN  &none
&none    &none     &kp LC(X)  &kp LC(C)  &kp LC(V)  &none      &none         &none             &none              &none          &none          &none
                              &none      &none      &none      &none         &none             &none
            >;
        };

        numpad {
            bindings = <
&none  &none  &none  &none  &none  &none      &kp DE_PLUS      &kp DE_N7      &kp DE_N8  &kp DE_N9  &kp DE_MINUS  &none
&none  &none  &none  &none  &none  &none      &kp DE_ASTERISK  &kp DE_N4      &kp DE_N5  &kp DE_N6  &kp DE_SLASH  &none
&none  &none  &none  &none  &none  &none      &none            &kp DE_N1      &kp DE_N2  &kp DE_N3  &kp DE_COMMA  &kp DE_DOT
                     &none  &none  &kp RET    &kp DE_SPACE     &kp BACKSPACE  &kp DE_N0
            >;
        };

        prefs {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&bt BT_CLR  &none         &none         &none         &to 6         &to 0           &none            &none                 &none          &none            &none              &none
&none       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp C_PREVIOUS   &kp C_PLAY_PAUSE      &kp C_NEXT     &kp C_VOLUME_UP  &kp C_VOLUME_DOWN  &none
&none       &ipad         &win_privat   &none         &none         &none           &rgb_ug RGB_TOG  &kp C_BRIGHTNESS_INC  &kp C_BRI_DEC  &none            &none              &none
                                        &shut_down    &gresc        &kp LG(DE_L)    &none            &none                 &none
            >;
        };

        f_keys {
            bindings = <
&kp F1  &kp F2        &kp F3        &kp F4            &kp F5          &kp F6    &kp F10  &kp F7  &kp F8  &kp F9  &none  &none
&none   &kp LEFT_WIN  &kp LEFT_ALT  &kp LEFT_CONTROL  &kp LEFT_SHIFT  &none     &kp F11  &kp F4  &kp F5  &kp F6  &none  &none
&none   &none         &none         &none             &none           &none     &kp F12  &kp F1  &kp F2  &kp F3  &none  &none
                                    &none             &none           &none     &none    &none   &none
            >;
        };

        default_layer_ipad {
            bindings = <
&kp TAB               &kp DE_Q                               &kp DE_W                           &kp DE_E                      &kp DE_R                             &kp DE_T     &kp DE_Z   &kp DE_U                              &kp DE_I                     &kp DE_O                            &kp DE_P                                       &kp DE_U_UMLAUT
&neo_level_l 7 DE_SZ  &hr_l_win_alt_shift LEFT_CONTROL DE_A  &hr_l_win_alt_shift LEFT_ALT DE_S  &hr_l_ctrl RS(LEFT_WIN) DE_D  &hr_l_win_alt_shift LEFT_SHIFT DE_F  &kp DE_G     &kp DE_H   &hr_r_win_alt_shift RIGHT_SHIFT DE_J  &hr_r_crtl RIGHT_WIN DE_K    &hr_r_win_alt_shift RIGHT_ALT DE_L  &hr_r_win_alt_shift RIGHT_CONTROL DE_O_UMLAUT  &neo_level_r 7 DE_A_UMLAUT
&kp LSHFT             &kp DE_Y                               &kp DE_X                           &kp DE_C                      &kp DE_V                             &kp DE_B     &kp DE_N   &kp DE_M                              &kp DE_COMMA                 &kp DE_DOT                          &kp DE_MINUS                                   &kp RIGHT_SHIFT
                                                                                                &level_switch 5 LA(TAB)       &level_switch 3 DELETE               &kp ENTER    &kp SPACE  &level_switch 8 BACKSPACE             &level_switch 5 RIGHT_SHIFT
            >;
        };

        neo_layer_mac {
            bindings = <
&kp ESC         &kp DE_GREATER_THAN  &kp DE_UNDERSCORE  &kp LA(DE_N5)  &kp LA(DE_N6)  &kp DE_LESS_THAN     &kp DE_EXCLAMATION   &kp DE_CARET             &kp DE_DEGREE             &kp DE_EQUAL         &kp DE_AMPERSAND  &kp DE_SZ
&kp DE_SECTION  &kp LA(LS(DE_N7))    &kp DE_SLASH       &kp LA(DE_N8)  &kp LA(DE_N9)  &kp DE_ASTERISK      &kp DE_QUESTION      &kp DE_LEFT_PARENTHESIS  &kp DE_RIGHT_PARENTHESIS  &kp DE_MINUS         &kp DE_COLON      &kp RA(DE_L)
&kp DE_EURO     &kp DE_HASH          &kp DE_DOLLAR      &kp LA(DE_N7)  &Tilde_mac     &kp DE_APOSTROPHE    &kp DE_PLUS          &kp DE_PERCENT           &kp DE_DOUBLE_QUOTES      &kp DE_SINGLE_QUOTE  &kp DE_SEMICOLON  &none
                                                        &none          &none          &kp LC(DE_PLUS)      &kp LC(LS(DE_PLUS))  &none                    &none
            >;
        };

        navigate_mac {
            bindings = <
&kp ESC  &none               &kp PG_DN  &kp UP     &kp PG_UP  &none            &kp RG(DE_Z)  &kp RS(RG(DE_Z))  &none          &none          &none              &none
&none    &kp RG(LEFT_ARROW)  &kp LEFT   &kp DOWN   &kp RIGHT  &kp RG(RIGHT)    &none         &kp RIGHT_SHIFT   &kp RIGHT_ALT  &kp RIGHT_WIN  &kp RIGHT_CONTROL  &none
&none    &none               &kp LG(X)  &kp LG(C)  &kp LG(V)  &none            &none         &none             &none          &none          &none              &none
                                        &none      &none      &none            &none         &none             &none
            >;
        };

        prefs_mac {
            bindings = <
&bt BT_CLR  &none         &none         &none         &to 6         &to 0           &none            &none                 &none          &none            &none              &none
&none       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp C_PREVIOUS   &kp C_PLAY_PAUSE      &kp C_NEXT     &kp C_VOLUME_UP  &kp C_VOLUME_DOWN  &none
&none       &ipad         &win_privat   &none         &none         &none           &rgb_ug RGB_TOG  &kp C_BRIGHTNESS_INC  &kp C_BRI_DEC  &none            &none              &none
                                        &shut_down    &gresc        &kp LG(DE_L)    &none            &none                 &none
            >;
        };
    };
};
